
This code loads geonames data in a postgresql database.  
In the target database, each country is stored in a schema.  
Each schema contain the following tables :
- admin1  
- admin2  
- admin3  
- admin4  
- cities  
- postal  

For each entity, a slug is computed.

Structure of the tables can be seen in directory sql/


Install
---------------------
- Copy config.yml.dist to config.yml  
- Adapt the parameters in config.yml
- Copy geonames files on your local machine (see comments of config.yml for details)


Usage
---------------------
Type :
python geonames2postgres.py
and follow usage instructions


About postal codes
---------------------
On geonames.org, postal codes are not stored with city informations, but in separate files (because one city can have several postal codes).  
This code tries to merge the two lists, and associates a postal code to each city.
When one city has several postal codes, the first one is retained. This generally (always ?) correspond to the most generic code of the city, but the merge process remains basic. For a better merge of postal codes, see https://pypi.python.org/pypi/django-cities


About this program
---------------------

Code released under the General Public Licence, version 3 or later, available at https://www.gnu.org/licenses/gpl-3.0.en.html

Code tested with python 3.8 under ubuntu 20.4

Last commit operational with python 2 is b63fc476fcc20ee00be469328f70e8a0770cdc33

Repository created 2017-05-02 by Thierry Graff.
